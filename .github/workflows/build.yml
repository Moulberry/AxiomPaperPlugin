name: Build and Release
on:
  push:
    branches: [ "**" ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    # Only run on PRs if the source branch is on someone else's repo
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 17 ]
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - name: JDK ${{ matrix.java }}
        uses: actions/setup-java@v3.6.0
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Build
        run: ./gradlew build
      - name: Extract Version Name
        id: extract_version
        # Janky way of getting the version without having to complicate things (there's probably a better way)
        run: |
          JAR_FILE=$(ls build/libs/AxiomPaper-*.jar)
          VERSION=${JAR_FILE##*-}
          VERSION=${VERSION%.jar}
          echo "$VERSION"
          echo "::set-output name=version::$VERSION"
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.extract_version.outputs.version }}
          release_name: Release ${{ steps.extract_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload JAR
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/AxiomPaper-${{ steps.extract_version.outputs.version }}.jar
          asset_name: AxiomPaper-${{ github.ref_name }}.jar
          asset_content_type: application/java-archive
